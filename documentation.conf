extensionName = "array"
markdownTemplate = """
# NetLogo Array Extension

{{#include}}BUILDING.md{{/include}}

{{#include}}USING.md{{/include}}

## Primitives

{{#contents}}{{#prims}}
[`{{name}}`](#{{primitive.extensionName}}{{primitive.name}})
{{/prims}}{{/contents}}

{{#allPrimitives}}
{{{.}}}
{{/allPrimitives}}

{{#include}}LICENSE.md{{/include}}
"""
primTemplate = """
### `{{name}}`

{{{description}}}
"""
filesToIncludeInManual = [ "BUILDING.md", "USING.md", "primitives" ]
primitives = [
  {
    name: from-list,
    type: reporter,
    returns: array,
    arguments: [ { type: list } ],
    description: "Reports a new array containing the same items in the same order as the input list."
  },
  {
    name: item,
    type: reporter,
    returns: anything,
    arguments: [ { type: array }, { name: index, type: number } ],
    description: "Reports the item in the given array with the given index (ranging from zero to the length of the array minus one)."
  },
  {
    name: set,
    type: command,
    arguments: [ { type: array }, { name: index, type: number }, { name: value, type: anything } ],
    description: """
Sets the item in the given array with the given index (ranging from zero to the length of the array minus one) to the given value.

Note that unlike the `replace-item` primitive for lists, a new array is not created.
The given array is actually modified.
"""
  },
  {
    name: length,
    type: reporter,
    returns: number,
    arguments: [ { type: array } ],
    description: "Reports the length of the given array, that is, the number of items in the array."
  },
  {
    name: to-list,
    type: reporter,
    returns: list,
    arguments: [ { type: array } ],
    description: "Reports a new list containing the same items in the same order as the given array."
  }
]
